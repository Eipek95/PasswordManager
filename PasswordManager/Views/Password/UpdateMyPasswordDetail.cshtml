@model UpdateMyPasswordViewModel
@{
    ViewData["Title"] = "UpdateMyPasswordDetail";
}

<div class="container">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert">
    </div>
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <form asp-action="UpdateMyPasswordDetail" method="post">
                <div class="mb-3">
                    <label asp-for="IdentityUserId" class="form-label"></label>
                    <input class="form-control" asp-for="IdentityUserId">
                </div>
                <div class="mb-3">
                    <label asp-for="Description" class="form-label"></label>
                    <input class="form-control" asp-for="Description">
                    <span class="text-danger" asp-validation-for="Description"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Url" class="form-label"></label>
                    <input class="form-control" asp-for="Url">
                    <span class="text-danger" asp-validation-for="Url"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="CategoryId"></label>
                    <div class="col-md-12">
                        <select class="form-control" asp-for="CategoryId" asp-items="ViewBag.categorySelectList">
                            <option value="">Kategori Seçiniz</option>
                        </select>
                        <span class="text-danger" asp-validation-for="CategoryId"></span>
                    </div>
                </div>
                <div class="mb-3">
                    <label asp-for="UserName" class="form-label"></label>
                    <input class="form-control" asp-for="UserName">
                    <span class="text-danger" asp-validation-for="UserName"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input type="password" class="form-control" asp-for="Password" id="password">
                    <span class="text-danger" asp-validation-for="Password"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="PasswordConfirm" class="form-label"></label>
                    <input type="password" class="form-control" asp-for="PasswordConfirm" id="passwordConfirm">
                    <span class="text-danger" asp-validation-for="PasswordConfirm"></span>
                    <input type="checkbox" id="generatePassword" /> Şifre Oluştur
                    <div class="float-end">
                        <input type="checkbox" id="showPassword" onclick="togglePasswordVisibility()" />
                        <label for="showPassword">Şifreyi Göster</label>
                    </div>
                </div>

                <div class="row mt-3">
                    <button type="submit" class="btn btn-success">Güncelle</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{

    <style>
        .disable-pointer-events {
            pointer-events: none;
            background-color: #e9ecef;
        }
    </style>
    <script>
        function confirmDelete(id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu detayı silmek istiyor musunuz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sil',
                cancelButtonText: 'Silme',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/Admin/OurReferences/DeleteOurReferences?id=${id}`, { method: 'POST' })
                        .then(response => response.text())
                        .then(data => {
                            Swal.fire({
                                title: 'Silindi!',
                                text: 'Hizmet silindi.',
                                icon: 'success',
                                showConfirmButton: false
                            });

                            setTimeout(function () {
                                location.href = '/Admin/OurReferences/Index';
                            }, 2000);
                        })
                        .catch(error => {
                            Swal.fire('Hata!', 'Silme sırasında bir hata meydana geldi.', 'error');
                        });
                }
            });
        }
    </script>
    <script src="~/js/site.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")

}


